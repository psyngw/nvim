snippet author "insert author" b
#!/usr/bin/env
# -*- coding: utf-8 -*-
# author wpp
# @time: `date +%Y-%m-%d`
$0
endsnippet

# snippet init "insert __init__"
# def __init__(self):
#     super().__init__()
# $0
# endsnippet

snippet with
with ${1:expr} as ${2:var}:
	${0:${VISUAL}}
endsnippet

snippet class
class ${1:ClassName}(${2:object}):
	"""${3:docstring for $1}"""
	def __init__(self, ${4:arg}):
		${5:super($1, self).__init__()}
		self.$4 = $4
		${0}
endsnippet

snippet forlist
[${1:expr} for ${2:expr} in ${3:expr}]
endsnippet

snippet todo
# TODO: ${1:info} [ psyngw ] [ `date '+%a %d %b %T'` ]
endsnippet

snippet allcount
done_count = count = 0
all_count = ${1:datas.count()}
${0}
endsnippet

snippet timec
time.strftime(${1:'%Y-%m-%d'}, ${2:time.localtime(time.time())})
endsnippet

snippet jsonload
with open(f"${1:filename}", 'r') as f:
		${2:data} = json.load(f)
$0
endsnippet

snippet jsondump
with open(f"${1:filename}", 'w+') as f:
		json.dump(${2:data}, f, indent=4)
$0
endsnippet

snippet timecount
b = datetime.datetime.now()
print(f"begin {b:%Y-%m-%d %T}")
begin = time.time()

$0

end = time.time()
print(f"begin {b:%Y-%m-%d %T}\nend {datetime.datetime.now():%Y-%m-%d %T}\n{(end - begin) / 3600:.2f} hours")
endsnippet
